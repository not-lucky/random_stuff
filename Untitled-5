	.file	"Untitled-5.c"
 # GNU C17 (x86_64-posix-seh-rev0, Built by MinGW-W64 project) version 12.2.0 (x86_64-w64-mingw32)
 #	compiled by GNU C version 12.2.0, GMP version 6.2.1, MPFR version 4.1.0, MPC version 1.2.1, isl version isl-0.25-GMP

 # GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
 # options passed: -mtune=core2 -march=nocona -g
	.text
.Ltext0:
	.cfi_sections	.debug_frame
	.file 1 "Untitled-5.c"
	.def	printf;	.scl	3;	.type	32;	.endef
	.seh_proc	printf
printf:
.LFB8:
	.file 2 "S:/Softwares/Scoop/apps/mingw/current/x86_64-w64-mingw32/include/stdio.h"
	.loc 2 369 1
	.cfi_startproc
	pushq	%rbp	 #
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx	 #
	.seh_pushreg	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
	subq	$56, %rsp	 #,
	.seh_stackalloc	56
	.cfi_def_cfa_offset 80
	leaq	48(%rsp), %rbp	 #,
	.seh_setframe	%rbp, 48
	.cfi_def_cfa 6, 32
	.seh_endprologue
	movq	%rcx, 32(%rbp)	 # __format, __format
	movq	%rdx, 40(%rbp)	 #,
	movq	%r8, 48(%rbp)	 #,
	movq	%r9, 56(%rbp)	 #,
 # S:/Softwares/Scoop/apps/mingw/current/x86_64-w64-mingw32/include/stdio.h:371:   __builtin_va_list __local_argv; __builtin_va_start( __local_argv, __format );
	.loc 2 371 35
	leaq	40(%rbp), %rax	 #, tmp86
	movq	%rax, -16(%rbp)	 # tmp86, MEM[(char * *)&__local_argv]
 # S:/Softwares/Scoop/apps/mingw/current/x86_64-w64-mingw32/include/stdio.h:372:   __retval = __mingw_vfprintf( stdout, __format, __local_argv );
	.loc 2 372 14
	movq	-16(%rbp), %rbx	 # __local_argv, __local_argv.0_1
	movl	$1, %ecx	 #,
	movq	__imp___acrt_iob_func(%rip), %rax	 #, tmp87
	call	*%rax	 # tmp87
.LVL0:
	movq	%rax, %rcx	 #, _2
	movq	32(%rbp), %rax	 # __format, tmp88
	movq	%rbx, %r8	 # __local_argv.0_1,
	movq	%rax, %rdx	 # tmp88,
	call	__mingw_vfprintf	 #
	movl	%eax, -4(%rbp)	 # tmp89, __retval
 # S:/Softwares/Scoop/apps/mingw/current/x86_64-w64-mingw32/include/stdio.h:374:   return __retval;
	.loc 2 374 10
	movl	-4(%rbp), %eax	 # __retval, _10
 # S:/Softwares/Scoop/apps/mingw/current/x86_64-w64-mingw32/include/stdio.h:375: }
	.loc 2 375 1
	addq	$56, %rsp	 #,
	popq	%rbx	 #
	.cfi_restore 3
	popq	%rbp	 #
	.cfi_restore 6
	.cfi_def_cfa 7, -40
	ret	
	.cfi_endproc
.LFE8:
	.seh_endproc
	.globl	rev
	.def	rev;	.scl	2;	.type	32;	.endef
	.seh_proc	rev
rev:
.LFB29:
	.loc 1 3 18
	.cfi_startproc
	pushq	%rbp	 #
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	subq	$16, %rsp	 #,
	.seh_stackalloc	16
	.seh_endprologue
	movl	%ecx, 16(%rbp)	 # num, num
 # Untitled-5.c:4:   int digits = 0, rev;
	.loc 1 4 7
	movl	$0, -12(%rbp)	 #, digits
 # Untitled-5.c:5:   int temp = num;
	.loc 1 5 7
	movl	16(%rbp), %eax	 # num, tmp86
	movl	%eax, -8(%rbp)	 # tmp86, temp
 # Untitled-5.c:6:   while (temp != 0) {
	.loc 1 6 9
	jmp	.L4	 #
.L5:
 # Untitled-5.c:7:     rev = rev * 10 + (temp % 10);
	.loc 1 7 15
	movl	-4(%rbp), %edx	 # rev, tmp87
	movl	%edx, %eax	 # tmp87, tmp88
	sall	$2, %eax	 #, tmp88
	addl	%edx, %eax	 # tmp87, tmp88
	addl	%eax, %eax	 # tmp89
	movl	%eax, %r8d	 # tmp88, _1
 # Untitled-5.c:7:     rev = rev * 10 + (temp % 10);
	.loc 1 7 28
	movl	-8(%rbp), %ecx	 # temp, tmp90
	movslq	%ecx, %rax	 # tmp90, tmp91
	imulq	$1717986919, %rax, %rax	 #, tmp91, tmp92
	shrq	$32, %rax	 #, tmp93
	movl	%eax, %edx	 # tmp93, tmp94
	sarl	$2, %edx	 #, tmp94
	movl	%ecx, %eax	 # tmp90, tmp95
	sarl	$31, %eax	 #, tmp95
	subl	%eax, %edx	 # tmp95, _2
	movl	%edx, %eax	 # _2, tmp96
	sall	$2, %eax	 #, tmp96
	addl	%edx, %eax	 # _2, tmp96
	addl	%eax, %eax	 # tmp97
	subl	%eax, %ecx	 # tmp96, tmp90
	movl	%ecx, %edx	 # tmp90, _2
 # Untitled-5.c:7:     rev = rev * 10 + (temp % 10);
	.loc 1 7 9
	leal	(%r8,%rdx), %eax	 #, tmp98
	movl	%eax, -4(%rbp)	 # tmp98, rev
 # Untitled-5.c:8:     temp /= 10;
	.loc 1 8 10
	movl	-8(%rbp), %eax	 # temp, tmp100
	movslq	%eax, %rdx	 # tmp100, tmp101
	imulq	$1717986919, %rdx, %rdx	 #, tmp101, tmp102
	shrq	$32, %rdx	 #, tmp103
	movl	%edx, %ecx	 # tmp103, tmp104
	sarl	$2, %ecx	 #, tmp104
	cltd
	movl	%ecx, %eax	 # tmp104, tmp104
	subl	%edx, %eax	 # tmp105, tmp104
	movl	%eax, -8(%rbp)	 # tmp99, temp
.L4:
 # Untitled-5.c:6:   while (temp != 0) {
	.loc 1 6 15
	cmpl	$0, -8(%rbp)	 #, temp
	jne	.L5	 #,
 # Untitled-5.c:10:   return rev;
	.loc 1 10 10
	movl	-4(%rbp), %eax	 # rev, _9
 # Untitled-5.c:11: }
	.loc 1 11 1
	addq	$16, %rsp	 #,
	popq	%rbp	 #
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret	
	.cfi_endproc
.LFE29:
	.seh_endproc
	.def	__main;	.scl	2;	.type	32;	.endef
	.section .rdata,"dr"
.LC0:
	.ascii "%d\0"
	.text
	.globl	main
	.def	main;	.scl	2;	.type	32;	.endef
	.seh_proc	main
main:
.LFB30:
	.loc 1 13 12
	.cfi_startproc
	pushq	%rbp	 #
	.seh_pushreg	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp	 #,
	.seh_setframe	%rbp, 0
	.cfi_def_cfa_register 6
	subq	$32, %rsp	 #,
	.seh_stackalloc	32
	.seh_endprologue
 # Untitled-5.c:13: int main() { printf("%d", rev(1445)); }
	.loc 1 13 12
	call	__main	 #
 # Untitled-5.c:13: int main() { printf("%d", rev(1445)); }
	.loc 1 13 14
	movl	$1445, %ecx	 #,
	call	rev	 #
	movl	%eax, %edx	 # _1,
	leaq	.LC0(%rip), %rax	 #, tmp85
	movq	%rax, %rcx	 # tmp85,
	call	printf	 #
	movl	$0, %eax	 #, _5
 # Untitled-5.c:13: int main() { printf("%d", rev(1445)); }
	.loc 1 13 39
	addq	$32, %rsp	 #,
	popq	%rbp	 #
	.cfi_restore 6
	.cfi_def_cfa 7, 8
	ret	
	.cfi_endproc
.LFE30:
	.seh_endproc
.Letext0:
	.file 3 "S:/Softwares/Scoop/apps/mingw/current/x86_64-w64-mingw32/include/vadefs.h"
	.section	.debug_info,"dr"
.Ldebug_info0:
	.long	0x31f
	.word	0x5
	.byte	0x1
	.byte	0x8
	.secrel32	.Ldebug_abbrev0
	.uleb128 0xa
	.ascii "GNU C17 12.2.0 -mtune=core2 -march=nocona -g\0"
	.byte	0x1d
	.ascii "Untitled-5.c\0"
	.ascii "S:\\\0"
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.secrel32	.Ldebug_line0
	.uleb128 0x4
	.ascii "__gnuc_va_list\0"
	.byte	0x3
	.byte	0x18
	.byte	0x1d
	.long	0x77
	.uleb128 0xb
	.byte	0x8
	.ascii "__builtin_va_list\0"
	.long	0x8f
	.uleb128 0x1
	.byte	0x1
	.byte	0x6
	.ascii "char\0"
	.uleb128 0xc
	.long	0x8f
	.uleb128 0x4
	.ascii "va_list\0"
	.byte	0x3
	.byte	0x1f
	.byte	0x1a
	.long	0x60
	.uleb128 0x1
	.byte	0x8
	.byte	0x7
	.ascii "long long unsigned int\0"
	.uleb128 0x1
	.byte	0x8
	.byte	0x5
	.ascii "long long int\0"
	.uleb128 0x1
	.byte	0x2
	.byte	0x7
	.ascii "short unsigned int\0"
	.uleb128 0x1
	.byte	0x4
	.byte	0x5
	.ascii "int\0"
	.uleb128 0x1
	.byte	0x4
	.byte	0x5
	.ascii "long int\0"
	.uleb128 0x5
	.long	0x8f
	.uleb128 0x1
	.byte	0x4
	.byte	0x7
	.ascii "unsigned int\0"
	.uleb128 0x1
	.byte	0x4
	.byte	0x7
	.ascii "long unsigned int\0"
	.uleb128 0x1
	.byte	0x1
	.byte	0x8
	.ascii "unsigned char\0"
	.uleb128 0xd
	.ascii "_iobuf\0"
	.byte	0x30
	.byte	0x2
	.byte	0x21
	.byte	0xa
	.long	0x1c3
	.uleb128 0x2
	.ascii "_ptr\0"
	.byte	0x25
	.byte	0xb
	.long	0x100
	.byte	0
	.uleb128 0x2
	.ascii "_cnt\0"
	.byte	0x26
	.byte	0x9
	.long	0xed
	.byte	0x8
	.uleb128 0x2
	.ascii "_base\0"
	.byte	0x27
	.byte	0xb
	.long	0x100
	.byte	0x10
	.uleb128 0x2
	.ascii "_flag\0"
	.byte	0x28
	.byte	0x9
	.long	0xed
	.byte	0x18
	.uleb128 0x2
	.ascii "_file\0"
	.byte	0x29
	.byte	0x9
	.long	0xed
	.byte	0x1c
	.uleb128 0x2
	.ascii "_charbuf\0"
	.byte	0x2a
	.byte	0x9
	.long	0xed
	.byte	0x20
	.uleb128 0x2
	.ascii "_bufsiz\0"
	.byte	0x2b
	.byte	0x9
	.long	0xed
	.byte	0x24
	.uleb128 0x2
	.ascii "_tmpfname\0"
	.byte	0x2c
	.byte	0xb
	.long	0x100
	.byte	0x28
	.byte	0
	.uleb128 0x4
	.ascii "FILE\0"
	.byte	0x2
	.byte	0x2f
	.byte	0x19
	.long	0x13b
	.uleb128 0x7
	.ascii "__mingw_vfprintf\0"
	.byte	0xc1
	.byte	0xf
	.long	0xed
	.long	0x1fc
	.uleb128 0x3
	.long	0x201
	.uleb128 0x3
	.long	0x20b
	.uleb128 0x3
	.long	0x9c
	.byte	0
	.uleb128 0x5
	.long	0x1c3
	.uleb128 0x8
	.long	0x1fc
	.uleb128 0x5
	.long	0x97
	.uleb128 0x8
	.long	0x206
	.uleb128 0x7
	.ascii "__acrt_iob_func\0"
	.byte	0x5d
	.byte	0x17
	.long	0x1fc
	.long	0x231
	.uleb128 0x3
	.long	0x105
	.byte	0
	.uleb128 0xe
	.ascii "main\0"
	.byte	0x1
	.byte	0xd
	.byte	0x5
	.long	0xed
	.quad	.LFB30
	.quad	.LFE30-.LFB30
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0xf
	.ascii "rev\0"
	.byte	0x1
	.byte	0x3
	.byte	0x5
	.long	0xed
	.quad	.LFB29
	.quad	.LFE29-.LFB29
	.uleb128 0x1
	.byte	0x9c
	.long	0x2b0
	.uleb128 0x10
	.ascii "num\0"
	.byte	0x1
	.byte	0x3
	.byte	0xd
	.long	0xed
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x6
	.ascii "digits\0"
	.byte	0x4
	.byte	0x7
	.long	0xed
	.uleb128 0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x6
	.ascii "rev\0"
	.byte	0x4
	.byte	0x13
	.long	0xed
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x6
	.ascii "temp\0"
	.byte	0x5
	.byte	0x7
	.long	0xed
	.uleb128 0x2
	.byte	0x91
	.sleb128 -24
	.byte	0
	.uleb128 0x11
	.ascii "printf\0"
	.byte	0x2
	.word	0x170
	.byte	0x5
	.long	0xed
	.quad	.LFB8
	.quad	.LFE8-.LFB8
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x12
	.ascii "__format\0"
	.byte	0x2
	.word	0x170
	.byte	0x19
	.long	0x206
	.uleb128 0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x13
	.uleb128 0x9
	.ascii "__retval\0"
	.word	0x172
	.byte	0x7
	.long	0xed
	.uleb128 0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x9
	.ascii "__local_argv\0"
	.word	0x173
	.byte	0x15
	.long	0x77
	.uleb128 0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x14
	.quad	.LVL0
	.long	0x210
	.byte	0
	.byte	0
	.section	.debug_abbrev,"dr"
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 2
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0x21
	.sleb128 8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 1
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 2
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x37
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0x21
	.sleb128 2
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0x8
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1b
	.uleb128 0x8
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7a
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x7c
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x48
	.byte	0
	.uleb128 0x7d
	.uleb128 0x1
	.uleb128 0x7f
	.uleb128 0x13
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_aranges,"dr"
	.long	0x2c
	.word	0x2
	.secrel32	.Ldebug_info0
	.byte	0x8
	.byte	0
	.word	0
	.word	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	0
	.quad	0
	.section	.debug_line,"dr"
.Ldebug_line0:
	.section	.debug_str,"dr"
	.ident	"GCC: (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 12.2.0"
	.def	__mingw_vfprintf;	.scl	2;	.type	32;	.endef
